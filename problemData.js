/*----------------------------------------------------------------------------------------
☆★ List of constants ★☆
  ----------------------------------------------------------------------------------------*/
var INITIAL_PC_BLOCKS = [[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[24,24,24, 0, 0, 0, 0, 0,26,26],
[24,27,27, 0, 0, 0, 0,26,26,22],
[23,27,27, 0, 0, 0,25,25,22,22],
[23,23,23, 0, 0, 0, 0,25,25,22]];

var INITIAL_PC_BLOCKS_MIRROR = [[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[25,25, 0, 0, 0, 0, 0,23,23,23],
[22,25,25, 0, 0, 0, 0,27,27,23],
[22,22,26,26, 0, 0, 0,27,27,24],
[22,26,26, 0, 0, 0, 0,24,24,24]];

var GUIDES_IJT = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(J, 0, 4, 18), G(T, 2, 4, 17)];
var GUIDES_ITJ = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(T, 2, 4, 16), G(J, 0, 4, 18)];
var GUIDES_TIJ = [G(I, 1, 1, 16), G(T, 2, 4, 16), G(I, 0, 4, 16), G(J, 0, 4, 18)];
var GUIDES_TJI = [G(I, 1, 1, 16), G(T, 2, 4, 16), G(J, 0, 4, 18), G(I, 0, 4, 18)];
var GUIDES_JIT = [G(I, 1, 1, 16), G(J, 0, 4, 18), G(I, 0, 4, 16), G(T, 2, 4, 17)];
var GUIDES_JTI = [G(I, 1, 1, 16), G(J, 0, 4, 18), G(T, 2, 4, 17), G(I, 0, 4, 18)];
var GUIDES_IOJ = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(O, 0, 3, 18), G(J, 2, 4, 17)];
var GUIDES_OIJ = [G(I, 1, 1, 16), G(O, 0, 3, 18), G(I, 0, 4, 16), G(J, 2, 4, 17)];
var GUIDES_OJI = [G(I, 1, 1, 16), G(O, 0, 3, 18), G(J, 2, 4, 17), G(I, 0, 4, 18)];
var GUIDES_ISJ = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(S, 0, 4, 17), G(J, 0, 4, 18)];
var GUIDES_SJI = [G(I, 1, 1, 16), G(S, 0, 4, 17), G(J, 0, 4, 18), G(I, 0, 4, 18)];
var GUIDES_SIJ = [G(I, 1, 1, 16), G(S, 0, 4, 17), G(I, 0, 4, 16), G(J, 0, 4, 18)];
var GUIDES_IZL = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(Z, 0, 4, 18), G(L, 2, 4, 17)];
var GUIDES_ZIL = [G(I, 1, 1, 16), G(Z, 0, 4, 18), G(I, 0, 4, 16), G(L, 2, 4, 17)];
var GUIDES_ZLI = [G(I, 1, 1, 16), G(Z, 0, 4, 18), G(L, 2, 4, 17), G(I, 0, 4, 18)];
var GUIDES_JZS = [G(I, 1, 1, 16), G(J, 0, 4, 16), G(Z, 3, 4, 17), G(S, 0, 5, 18)];
var GUIDES_LTI = [G(I, 1, 1, 16), G(L, 1, 4, 17), G(T, 2, 5, 15), G(I, 1, 2, 16)];
var GUIDES_LIT = [G(I, 1, 1, 16), G(L, 1, 4, 17), G(I, 1, 2, 16), G(T, 2, 5, 17)];
var GUIDES_TLI = [G(I, 1, 1, 16), G(T, 0, 4, 18), G(L, 2, 4, 17), G(I, 0, 4, 18)];
var GUIDES_TIL = [G(I, 1, 1, 16), G(T, 0, 4, 18), G(I, 0, 4, 16), G(L, 2, 4, 17)];
var GUIDES_ITL = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(T, 0, 4, 18), G(L, 2, 4, 17)];
var GUIDES_ITO = [G(I, 1, 1, 16), G(I, 0, 4, 15), G(T, 1, 3, 17), G(O, 0, 4, 18)];
var GUIDES_TIO = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(I, 0, 4, 16), G(O, 0, 4, 18)];
var GUIDES_TOI = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(O, 0, 4, 18), G(I, 0, 4, 18)];
var GUIDES_ITS = [G(I, 1, 1, 16), G(I, 1, 2, 16), G(T, 1, 4, 16), G(S, 0, 5, 18)];
var GUIDES_TIS = [G(I, 1, 1, 16), G(T, 1, 4, 16), G(I, 1, 2, 16), G(S, 0, 5, 18)];
var GUIDES_TJL = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(J, 1, 5, 17), G(L, 3, 4, 17)];
var GUIDES_TLJ = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(L, 3, 4, 17), G(J, 1, 5, 17)];
var GUIDES_TZS = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(Z, 0, 4, 17), G(S, 0, 5, 18)];
var GUIDES_TSZ = [G(I, 1, 1, 16), G(T, 1, 3, 17), G(S, 0, 5, 17), G(Z, 0, 4, 18)];
var GUIDES_ZJS = [G(I, 1, 1, 16), G(Z, 0, 4, 18), G(J, 1, 3, 17), G(S, 0, 5, 18)];
var GUIDES_ZSJ = [G(I, 1, 1, 16), G(Z, 0, 4, 18), G(S, 0, 5, 17), G(J, 1, 3, 17)];
var GUIDES_JST = [G(I, 1, 1, 16), G(J, 0, 4, 18), G(S, 1, 3, 17), G(T, 2, 5, 17)];
var GUIDES_JST2= [G(I, 2, 3, 17), G(J, 0, 3, 18), G(S, 0, 5, 18), G(T, 2, 3, 17)];
var GUIDES_OJT = [G(I, 1, 1, 16), G(O, 0, 3, 18), G(J, 0, 4, 17), G(T, 2, 5, 17)];
var GUIDES_TJS = [G(I, 1, 1, 16), G(T, 0, 4, 18), G(J, 1, 3, 17), G(S, 0, 5, 18)];
var GUIDES_TSJ = [G(I, 1, 1, 16), G(T, 0, 4, 18), G(S, 0, 5, 17), G(J, 1, 3, 17)];
var GUIDES_TOJ = [G(I, 0, 3, 18), G(T, 2, 5, 16), G(O, 0, 3, 18), G(J, 1, 2, 17)];
var GUIDES_TJO = [G(I, 0, 3, 18), G(T, 2, 5, 16), G(J, 1, 2, 17), G(O, 0, 3, 18)];
var GUIDES_OTJ = [G(I, 0, 3, 18), G(O, 0, 3, 18), G(T, 2, 5, 16), G(J, 1, 2, 17)];
var GUIDES_JTO = [G(I, 0, 3, 18), G(J, 1, 2, 17), G(T, 2, 5, 16), G(O, 0, 3, 18)];
var GUIDES_TLO = [G(I, 0, 3, 18), G(T, 2, 5, 16), G(L, 0, 3, 18), G(O, 0, 2, 18)];
var GUIDES_LTO = [G(I, 0, 3, 18), G(L, 0, 3, 18), G(T, 2, 5, 17), G(O, 0, 2, 18)];
var GUIDES_LOT = [G(I, 0, 3, 18), G(L, 0, 3, 18), G(O, 0, 2, 18), G(T, 2, 5, 17)];
var GUIDES_STO = [G(I, 0, 3, 18), G(S, 0, 5, 17), G(T, 1, 2, 17), G(O, 0, 3, 18)];
var GUIDES_TSO = [G(I, 0, 3, 18), G(T, 1, 2, 17), G(S, 0, 5, 17), G(O, 0, 3, 18)];
var GUIDES_SZL = [G(I, 0, 3, 18), G(S, 0, 5, 17), G(Z, 0, 3, 18), G(L, 2, 3, 17)];
var GUIDES_ZSL = [G(I, 0, 3, 18), G(Z, 0, 3, 18), G(S, 0, 5, 17), G(L, 2, 3, 17)];
var GUIDES_SOJ = [G(I, 0, 3, 18), G(S, 0, 5, 17), G(O, 0, 2, 18), G(J, 2, 3, 17)];
var GUIDES_OSJ = [G(I, 0, 3, 18), G(O, 0, 2, 18), G(S, 0, 5, 17), G(J, 2, 3, 17)];
var GUIDES_LTZ = [G(I, 0, 3, 16), G(L, 2, 3, 17), G(T, 2, 5, 17), G(Z, 0, 3, 18)];
var GUIDES_LZT = [G(I, 0, 3, 16), G(L, 2, 3, 17), G(Z, 0, 3, 18), G(T, 2, 5, 17)];
var GUIDES_LTS = [G(I, 0, 3, 16), G(L, 2, 3, 17), G(T, 2, 3, 17), G(S, 0, 5, 18)];
var GUIDES_LST = [G(I, 0, 3, 16), G(L, 2, 3, 17), G(S, 0, 5, 18), G(T, 2, 3, 17)];
var GUIDES_JTZ = [G(I, 0, 3, 18), G(J, 0, 3, 18), G(T, 2, 5, 17), G(Z, 0, 3, 18)];
var GUIDES_JZT = [G(I, 0, 3, 18), G(J, 0, 3, 18), G(Z, 0, 3, 18), G(T, 2, 5, 17)];
var GUIDES_JTS = [G(I, 0, 3, 18), G(J, 0, 3, 18), G(T, 2, 3, 17), G(S, 0, 5, 18)];
var GUIDES_LOS = [G(I, 0, 3, 16), G(L, 1, 2, 17), G(O, 0, 3, 17), G(S, 2, 5, 17)];
var GUIDES_LIZ = [G(I, 0, 3, 16), G(L, 1, 2, 17), G(I, 0, 4, 16), G(Z, 0, 4, 18)];
var GUIDES_LZI = [G(I, 0, 3, 16), G(L, 1, 2, 17), G(Z, 0, 4, 18), G(I, 0, 4, 18)];
var GUIDES_OJS = [G(I, 0, 3, 16), G(O, 0, 2, 18), G(J, 2, 3, 16), G(S, 0, 5, 18)];
var GUIDES_TSI = [G(I, 0, 3, 18), G(T, 1, 2, 17), G(S, 0, 4, 18), G(I, 0, 4, 18)];
var GUIDES_STI = [G(I, 0, 3, 18), G(S, 0, 4, 18), G(T, 1, 2, 17), G(I, 0, 4, 18)];
var GUIDES_ILO = [G(I, 0, 3, 18), G(I, 0, 3, 17), G(L, 2, 5, 17), G(O, 0, 2, 18)];
var GUIDES_IOL = [G(I, 0, 3, 18), G(I, 0, 3, 17), G(O, 0, 2, 18), G(L, 2, 5, 17)];
var GUIDES_LIO = [G(I, 0, 3, 16), G(L, 2, 5, 16), G(I, 0, 3, 18), G(O, 0, 2, 18)];
var GUIDES_LSIO= [G(L, 2, 3, 17), G(S, 1, 2, 17), G(I, 0, 4, 16), G(O, 0, 4, 18)];

/* Mirror guide */
var GUIDES_MIRROR_ILT = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(L, 0, 3, 18),G(T, 2, 3, 17)];
var GUIDES_MIRROR_ITL = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(T, 2, 3, 16),G(L, 0, 3, 18)];
var GUIDES_MIRROR_TIL = [G(I, 1, 4, 16),G(T, 2, 3, 16),G(I, 0, 2, 16),G(L, 0, 3, 18)];
var GUIDES_MIRROR_TLI = [G(I, 1, 4, 16),G(T, 2, 3, 16),G(L, 0, 3, 18),G(I, 0, 2, 18)];
var GUIDES_MIRROR_LIT = [G(I, 1, 4, 16),G(L, 0, 3, 18),G(I, 0, 2, 16),G(T, 2, 3, 17)];
var GUIDES_MIRROR_LTI = [G(I, 1, 4, 16),G(L, 0, 3, 18),G(T, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_IOL = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(O, 0, 3, 18),G(L, 2, 3, 17)];
var GUIDES_MIRROR_OIL = [G(I, 1, 4, 16),G(O, 0, 3, 18),G(I, 0, 2, 16),G(L, 2, 3, 17)];
var GUIDES_MIRROR_OLI = [G(I, 1, 4, 16),G(O, 0, 3, 18),G(L, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_IZL = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(Z, 0, 3, 17),G(L, 0, 3, 18)];
var GUIDES_MIRROR_ZLI = [G(I, 1, 4, 16),G(Z, 0, 3, 17),G(L, 0, 3, 18),G(I, 0, 2, 18)];
var GUIDES_MIRROR_ZIL = [G(I, 1, 4, 16),G(Z, 0, 3, 17),G(I, 0, 2, 16),G(L, 0, 3, 18)];
var GUIDES_MIRROR_ISJ = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(S, 2, 3, 17),G(J, 2, 3, 17)];
var GUIDES_MIRROR_SIJ = [G(I, 1, 4, 16),G(S, 2, 3, 17),G(I, 0, 2, 16),G(J, 2, 3, 17)];
var GUIDES_MIRROR_SJI = [G(I, 1, 4, 16),G(S, 2, 3, 17),G(J, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_LSZ = [G(I, 1, 4, 16),G(L, 0, 3, 16),G(S, 3, 4, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_JTI = [G(I, 1, 4, 16),G(J, 3, 3, 17),G(T, 2, 2, 15),G(I, 1, 3, 16)];
var GUIDES_MIRROR_JIT = [G(I, 1, 4, 16),G(J, 3, 3, 17),G(I, 1, 3, 16),G(T, 2, 2, 17)];
var GUIDES_MIRROR_TJI = [G(I, 1, 4, 16),G(T, 0, 3, 18),G(J, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_TIJ = [G(I, 1, 4, 16),G(T, 0, 3, 18),G(I, 0, 2, 16),G(J, 2, 3, 17)];
var GUIDES_MIRROR_ITJ = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(T, 0, 3, 18),G(J, 2, 3, 17)];
var GUIDES_MIRROR_ITO = [G(I, 1, 4, 16),G(I, 0, 2, 15),G(T, 3, 4, 17),G(O, 0, 2, 18)];
var GUIDES_MIRROR_TIO = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(I, 0, 2, 16),G(O, 0, 2, 18)];
var GUIDES_MIRROR_TOI = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(O, 0, 2, 18),G(I, 0, 2, 18)];
var GUIDES_MIRROR_ITZ = [G(I, 1, 4, 16),G(I, 1, 3, 16),G(T, 3, 3, 16),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_TIZ = [G(I, 1, 4, 16),G(T, 3, 3, 16),G(I, 1, 3, 16),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_TLJ = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(L, 3, 2, 17),G(J, 1, 3, 17)];
var GUIDES_MIRROR_TJL = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(J, 1, 3, 17),G(L, 3, 2, 17)];
var GUIDES_MIRROR_TSZ = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(S, 0, 3, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_TZS = [G(I, 1, 4, 16),G(T, 3, 4, 17),G(Z, 0, 2, 17),G(S, 2, 3, 17)];
var GUIDES_MIRROR_SLZ = [G(I, 1, 4, 16),G(S, 2, 3, 17),G(L, 3, 4, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_SZL = [G(I, 1, 4, 16),G(S, 2, 3, 17),G(Z, 0, 2, 17),G(L, 3, 4, 17)];
var GUIDES_MIRROR_LZT = [G(I, 1, 4, 16),G(L, 0, 3, 18),G(Z, 1, 3, 17),G(T, 2, 2, 17)];
var GUIDES_MIRROR_LZT2 = [G(I, 2, 3, 17),G(L, 0, 4, 18),G(Z, 0, 2, 18),G(T, 2, 4, 17)];
var GUIDES_MIRROR_OLT = [G(I, 1, 4, 16),G(O, 0, 3, 18),G(L, 0, 3, 17),G(T, 2, 2, 17)];
var GUIDES_MIRROR_TLZ = [G(I, 1, 4, 16),G(T, 0, 3, 18),G(L, 3, 4, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_TZL = [G(I, 1, 4, 16),G(T, 0, 3, 18),G(Z, 0, 2, 17),G(L, 3, 4, 17)];
var GUIDES_MIRROR_TOL = [G(I, 2, 3, 17),G(T, 2, 2, 16),G(O, 0, 3, 18),G(L, 3, 5, 17)];
var GUIDES_MIRROR_TLO = [G(I, 2, 3, 17),G(T, 2, 2, 16),G(L, 3, 5, 17),G(O, 0, 3, 18)];
var GUIDES_MIRROR_OTL = [G(I, 2, 3, 17),G(O, 0, 3, 18),G(T, 2, 2, 16),G(L, 3, 5, 17)];
var GUIDES_MIRROR_LTO = [G(I, 2, 3, 17),G(L, 2, 4, 17),G(T, 2, 2, 16),G(O, 0, 4, 18)];
var GUIDES_MIRROR_TJO = [G(I, 2, 3, 17),G(T, 2, 2, 16),G(J, 0, 4, 18),G(O, 0, 4, 18)];
var GUIDES_MIRROR_JTO = [G(I, 2, 3, 17),G(J, 0, 4, 18),G(T, 2, 2, 17),G(O, 0, 4, 18)];
var GUIDES_MIRROR_JOT = [G(I, 2, 3, 17),G(J, 0, 4, 18),G(O, 0, 4, 18),G(T, 2, 2, 17)];
var GUIDES_MIRROR_ZTO = [G(I, 2, 3, 17),G(Z, 0, 2, 17),G(T, 3, 5, 17),G(O, 0, 3, 18)];
var GUIDES_MIRROR_TZO = [G(I, 2, 3, 17),G(T, 3, 5, 17),G(Z, 0, 2, 17),G(O, 0, 3, 18)];
var GUIDES_MIRROR_ZSJ = [G(I, 2, 3, 17),G(Z, 0, 2, 17),G(S, 2, 4, 17),G(J, 2, 4, 17)];
var GUIDES_MIRROR_SZJ = [G(I, 2, 3, 17),G(S, 0, 4, 18),G(Z, 0, 2, 17),G(J, 2, 4, 17)];
var GUIDES_MIRROR_ZOL = [G(I, 2, 3, 17),G(Z, 0, 2, 17),G(O, 0, 4, 18),G(L, 2, 4, 17)];
var GUIDES_MIRROR_OZL = [G(I, 2, 3, 17),G(O, 0, 4, 18),G(Z, 0, 2, 17),G(L, 2, 4, 17)];
var GUIDES_MIRROR_JTS = [G(I, 0, 3, 16),G(J, 2, 4, 17),G(T, 2, 2, 17),G(S, 2, 4, 17)];
var GUIDES_MIRROR_JST = [G(I, 0, 3, 16),G(J, 2, 4, 17),G(S, 0, 4, 18),G(T, 2, 2, 17)];
var GUIDES_MIRROR_JTZ = [G(I, 0, 3, 16),G(J, 2, 4, 17),G(T, 2, 4, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_JZT = [G(I, 0, 3, 16),G(J, 2, 4, 17),G(Z, 0, 2, 18),G(T, 2, 4, 17)];
var GUIDES_MIRROR_LTS = [G(I, 2, 3, 17),G(L, 0, 4, 18),G(T, 2, 2, 17),G(S, 2, 4, 17)];
var GUIDES_MIRROR_LST = [G(I, 2, 3, 17),G(L, 0, 4, 18),G(S, 0, 4, 18),G(T, 2, 2, 17)];
var GUIDES_MIRROR_LTZ = [G(I, 2, 3, 17),G(L, 0, 4, 18),G(T, 2, 4, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_JOZ = [G(I, 0, 3, 16),G(J, 3, 5, 17),G(O, 0, 3, 17),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_JIS = [G(I, 0, 3, 16),G(J, 3, 5, 17),G(I, 0, 2, 16),G(S, 2, 3, 17)];
var GUIDES_MIRROR_JSI = [G(I, 0, 3, 16),G(J, 3, 5, 17),G(S, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_OLZ = [G(I, 0, 3, 16),G(O, 0, 4, 18),G(L, 2, 4, 16),G(Z, 2, 2, 17)];
var GUIDES_MIRROR_TZI = [G(I, 2, 3, 17),G(T, 3, 5, 17),G(Z, 2, 3, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_ZTI = [G(I, 2, 3, 17),G(Z, 0, 3, 18),G(T, 3, 5, 17),G(I, 0, 2, 18)];
var GUIDES_MIRROR_IJO = [G(I, 2, 3, 17),G(I, 0, 3, 17),G(J, 2, 2, 17),G(O, 0, 4, 18)];
var GUIDES_MIRROR_IOJ = [G(I, 2, 3, 17),G(I, 0, 3, 17),G(O, 0, 4, 18),G(J, 2, 2, 17)];
var GUIDES_MIRROR_JIO = [G(I, 0, 3, 16),G(J, 2, 2, 16),G(I, 2, 3, 17),G(O, 0, 4, 18)];
var GUIDES_MIRROR_JZIO = [G(J, 2, 4, 17),G(Z, 1, 4, 17),G(I, 0, 2, 16),G(O, 0, 2, 18)];


var WARMING_UP = 0;               // Let's create a template
var PROB840_VERTICAL = 1;
var PROB840_HORIZONTAL_1 = 2;
var PROB840_HORIZONTAL_LAYDOWN = 3;
var PROB840_HORIZONTAL_3 = 4;
var PROB840_HORIZONTAL_IILO = 5;
var PROB840_LSIO = 6;
var PROB840 = 7;
var GUIDANCE_VERTICAL = 8;
var GUIDANCE_HORIZONTAL_1 = 9;
var GUIDANCE_HORIZONTAL_LAYDOWN = 10;
var GUIDANCE_HORIZONTAL_3 = 11;
var GUIDANCE_HORIZONTAL_IILO = 12;
var GUIDANCE_LSIO = 13;
var GUIDANCE_OTHER_WISE = 14;
var PROB840_MIRROR_VERTICAL = 15;
var PROB840_MIRROR_HORIZONTAL_1 = 16;
var PROB840_MIRROR_HORIZONTAL_LAYDOWN = 17;
var PROB840_MIRROR_HORIZONTAL_IILO = 18;
var PROB840_MIRROR_HORIZONTAL_3 = 19;
var PROB840_MIRROR_JZIO = 20;
var PROB840_MIRROR = 21;
var PROB_TYPE_NUM = 22;

var PROB_NUM_WARMING_UP = 1;
var PROB_NUM_840 = 840 + 1;
var PROB_NUM_GUIDE = 30 + 1;
var PROB_NUM_OTHER_WISE = 27 + 1;
var PROB_NUM_840_MIRROR = 840 + 1;

function getProblems(){
  var problems = [];

  /* Warm-up questions */
  for(var i = 0; i < PROB_NUM_WARMING_UP; i++) problems.push(new ProblemWarmingUp(i));

  /* 840 questions in total (including questions that cannot be perfectly cleared) */
  for(var i = 0; i < PROB_NUM_840; i++) problems.push(new Problem840(i));

  /* Basic pattern [with guide] */
  for(var i = 0; i < PROB_NUM_GUIDE; i++) problems.push(new ProblemWithGuidance(i));

  /*Other [Guide available] */
  for(var i = 0; i < PROB_NUM_OTHER_WISE; i++) problems.push(new ProblemOtherwise(i));

  /* 840 questions in total (including questions that cannot be perfectly cleared) */
  for(var i = 0; i < PROB_NUM_840_MIRROR; i++) problems.push(new Problem840_Mirror(i));

  return problems;
}

function getProbemIndex(type){
  var startId = 0;

  switch(type){
    case   WARMING_UP:  /* Let's create a template */
    startId = 0;
    break;

    case   PROB840_VERTICAL:  /* I Vertical placement */
    case   PROB840_HORIZONTAL_1:  /* First move I Mino 1st row */
    case   PROB840_HORIZONTAL_LAYDOWN:  /* Lay everything down */
    case   PROB840_HORIZONTAL_IILO:  /* IILO */
    case   PROB840_HORIZONTAL_3:  /* First move I, 3rd row of mino */
    case   PROB840_LSIO:  /* LSIO */
    case   PROB840:  /* All questions */
    startId = PROB_NUM_WARMING_UP;
    break;

    case   GUIDANCE_VERTICAL:  /* I Vertical (with guide) */
    case   GUIDANCE_HORIZONTAL_1:  /* First move I Mino 1st row (with guide) */
    case   GUIDANCE_HORIZONTAL_LAYDOWN:  /** First move I Mino 1st row (with guide) */
    case   GUIDANCE_HORIZONTAL_IILO :  /* IILO (with guide) */
    case   GUIDANCE_LSIO:  /* LSIO (with guide) */
    case   GUIDANCE_HORIZONTAL_3:  /* First move I, 3rd row of mino (with guide) */
    startId = PROB_NUM_WARMING_UP + PROB_NUM_840;
    break;

    case   GUIDANCE_OTHER_WISE:  /* Other (with guide) */
    startId = PROB_NUM_WARMING_UP + PROB_NUM_840 + PROB_NUM_GUIDE;
    break;

    case   PROB840_MIRROR_VERTICAL:  /* I Vertical placement */
    case   PROB840_MIRROR_HORIZONTAL_1:  /* First move, first row of I Mino */
    case   PROB840_MIRROR_HORIZONTAL_LAYDOWN:  /* Lay everything down */
    case   PROB840_MIRROR_HORIZONTAL_IILO:  /* IILO */
    case   PROB840_MIRROR_HORIZONTAL_3:  /* First move I, 3rd row of mino */
    case   PROB840_MIRROR_JZIO:  /* LSIO */
    case   PROB840_MIRROR:  /* All questions */
    startId = PROB_NUM_WARMING_UP + PROB_NUM_840 + PROB_NUM_GUIDE + PROB_NUM_OTHER_WISE;
    break;

    default:
    startId = 0;
    break;
  }

  return startId;
}

function getProblemIdList(type){
  var problemIds = [];
  var startId = getProbemIndex(type);

  switch(type){
    case   WARMING_UP:  /* Let's create a template */
    problemIds = [0];
    break;
    case   GUIDANCE_VERTICAL:  /* I Vertical (with guide) */
    problemIds = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];
    break;
    case   GUIDANCE_HORIZONTAL_1:  /* First move I Mino 1st row (with guide) */
    problemIds = [15,16,17,18,19,20];
    break;
    case   GUIDANCE_HORIZONTAL_LAYDOWN:  /* Lay everything down (with guide) */
    problemIds = [21,22,23,24];
    break;
    case  GUIDANCE_HORIZONTAL_IILO :  /* IILO (with guide) */
    problemIds = [25,26];
    break;
    case   GUIDANCE_HORIZONTAL_3:  /* First move I, 3rd row of mino (with guide) */
    problemIds = [27,28,29];
    break;
    case   GUIDANCE_LSIO:  /* LSIO (with guide) */
    problemIds = [30];
    break;
    case   PROB840_VERTICAL:  /* I Vertical placement */
    problemIds = [3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,25,27,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,49,53,54,55,56,57,58,61,62,63,64,65,69,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,113,114,117,118,119,120,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,143,151,153,159,161,162,163,164,165,167,169,171,173,174,175,176,177,179,180,181,182,183,184,185,187,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,220,221,223,224,225,227,231,233,234,235,236,237,240,243,245,247,249,251,253,254,255,256,257,258,259,260,263,271,273,279,281,283,285,287,293,301,303,305,313,321,322,323,324,325,326,327,328,329,330,333,334,336,337,338,340,341,342,343,344,345,347,349,353,354,357,361,362,363,364,365,369,373,374,375,376,377,378,381,382,383,384,385,387,389,391,393,394,395,396,397,399,400,401,403,405,407,413,421,425,427,441,442,443,444,445,446,447,448,449,450,453,454,456,457,460,461,462,465,467,468,469,474,481,482,483,484,485,489,493,494,495,496,497,498,501,502,503,504,505,507,509,511,513,514,515,516,517,518,519,520,521,523,525,533,541,545,547,561,562,563,564,565,566,567,568,569,570,572,573,574,576,577,578,579,580,581,582,585,586,587,588,589,590,594,598,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,633,634,635,636,637,638,640,641,642,643,644,645,646,647,648,649,650,653,654,656,657,658,660,661,662,663,664,665,666,667,668,669,670,673,674,676,677,680,681,682,683,684,685,686,687,688,689,690,692,693,694,696,697,698,699,700,701,702,703,704,705,706,708,709,710,712,713,716,717,718,719,720,721,723,724,725,726,727,728,729,730,733,734,737,738,739,740,741,743,744,745,747,751,753,754,755,756,757,760,761,762,763,764,765,767,769,773,774,777,781,782,785,787,788,789,794,801,802,805,806,807,808,809,810,814,818,821,822,823,824,825,826,828,829,830,832,833,836,837,838,839,840];
    break;
    case   PROB840_HORIZONTAL_1:  /* First move I Mino 1st row */
    problemIds = [147,154,170,172,190,192,212,219,239,267,274,290,291,294,295,296,300,310,311,315,317,318,319,320,331,332,335,339,352,355,356,359,390,392,410,411,414,415,416,420,426,428,430,433,434,435,436,438,439,451,452,455,458,475,478,510,512,530,531,535,537,538,539,540,546,548,550,553,554,555,556,558,559,571,575,591,592,595,597,599,600,632,639,651,652,655,659,671,672,675,678,691,695,707,711,714,759,772,775,776,779,795,798,811,812,815,817,819,820,827,831,834];
    break;
    case   PROB840_HORIZONTAL_LAYDOWN:  /* Lay everything down */
    problemIds = [155,156,160,228,232,238,275,276,280,307,314,316,348,358,360,527,534,536,748,752,758,768,778,780];
    break;
    case   PROB840_HORIZONTAL_IILO:  /* IILO */
    problemIds = [1,21,26,28,30,46,47,48,50,66,70,121,141,241,246,248,250,261,282,284,302,366,367,368,370,402,404,486,490,522];
    break;
    case   PROB840_HORIZONTAL_3:  /* First move I, 3rd row of mino */
    problemIds = [24,32,144,146,157,166,244,252,264,266,277,286,289,292,297,299,304,309,312,351,386,406,409,412,417,419,524,529,532,771];
    break;
    case   PROB840_LSIO:  /* LSIO */
    problemIds = [289,290,291,292,302,306,309,310,311,312,315,319];
    break;
    case   PROB840:  /* All questions */
    problemIds = [1,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,61,62,63,64,65,66,69,70,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,113,114,117,118,119,120,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,143,144,146,147,151,153,154,155,156,157,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,227,228,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,266,267,271,273,274,275,276,277,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,373,374,375,376,377,378,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,416,417,419,420,421,425,426,427,428,430,433,434,435,436,438,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,465,467,468,469,474,475,478,481,482,483,484,485,486,489,490,493,494,495,496,497,498,501,502,503,504,505,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,527,529,530,531,532,533,534,535,536,537,538,539,540,541,545,546,547,548,550,553,554,555,556,558,559,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,594,595,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,716,717,718,719,720,721,723,724,725,726,727,728,729,730,733,734,737,738,739,740,741,743,744,745,747,748,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,767,768,769,771,772,773,774,775,776,777,778,779,780,781,782,785,787,788,789,794,795,798,801,802,805,806,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840];
    break;
    case   GUIDANCE_OTHER_WISE:  /* Other (with guide) */
    problemIds = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27];
    break;
    case   PROB840_MIRROR_VERTICAL:  /* I Vertical placement */
    problemIds =[3,5,7,9,10,11,12,13,14,15,16,17,20,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,49,50,53,54,55,56,58,61,62,63,64,65,67,68,69,70,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,110,113,114,117,118,119,120,123,125,127,129,130,131,132,133,134,135,136,137,140,143,152,153,160,161,163,165,167,173,181,182,183,184,185,188,189,193,197,198,201,202,203,204,205,206,207,208,209,210,213,214,216,217,218,220,221,224,225,237,243,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,263,272,273,280,281,282,283,284,285,287,289,291,292,293,294,295,296,297,300,301,303,304,305,308,312,313,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,336,337,338,339,340,341,342,343,344,345,348,349,352,353,354,355,356,357,358,359,360,361,365,366,367,368,369,370,373,374,375,376,378,381,383,385,387,393,401,402,403,404,405,407,409,411,412,413,414,415,416,417,420,421,422,425,429,431,432,439,441,442,443,444,445,446,449,450,451,452,453,456,457,459,460,462,469,472,481,482,483,484,485,487,488,489,490,493,494,495,496,497,498,501,502,503,504,505,508,509,513,517,518,521,523,524,525,528,532,533,536,537,538,539,540,541,542,545,549,551,552,559,561,562,563,564,565,566,568,569,570,572,573,576,577,578,579,580,581,582,585,586,589,590,591,592,595,599,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,633,634,636,637,638,640,641,642,643,644,645,646,647,648,649,650,652,653,654,656,657,658,659,660,661,662,663,664,665,666,669,670,671,672,673,676,677,679,680,681,682,683,684,685,686,688,689,690,692,693,696,697,698,699,700,701,702,703,704,705,706,708,709,710,711,712,713,715,716,717,718,719,720,721,725,726,727,728,730,733,734,737,738,739,740,741,744,745,757,761,762,763,764,765,768,769,772,773,774,775,776,777,778,779,780,782,789,792,801,802,805,806,809,810,811,812,815,819,821,822,823,824,825,826,828,829,830,831,832,833,835,836,837,838,839,840];
    break;
    case   PROB840_MIRROR_HORIZONTAL_1:  /* First move, first row of I Mino */
    problemIds = [147,154,171,174,175,176,178,180,191,195,199,200,211,212,215,219,230,232,233,234,235,236,239,267,274,298,299,315,331,335,350,351,391,394,395,396,398,400,418,419,435,438,447,448,455,458,466,470,471,474,475,477,478,479,480,511,515,519,520,535,555,558,567,571,575,587,588,594,597,598,600,631,632,635,639,651,655,667,668,675,678,687,691,695,707,714,750,752,753,754,755,756,759,770,771,786,790,791,794,795,797,798,799,800,807,808,814,817,818,820,827,834];
    break;
    case   PROB840_MIRROR_HORIZONTAL_LAYDOWN:  /* Lay everything down */
    problemIds = [151,155,156,187,194,196,228,238,240,271,275,276,307,311,314,507,514,516,527,531,534,748,758,760];
    break;
    case   PROB840_MIRROR_HORIZONTAL_IILO:  /* IILO */
    problemIds = [1,6,8,18,21,42,43,44,57,102,109,121,126,128,138,141,162,164,222,241,261,362,363,364,377,382,384,722,729,742];
    break;
    case   PROB840_MIRROR_HORIZONTAL_3:  /* First move I, 3rd row of mino */
    problemIds = [2,19,122,139,142,148,149,168,169,172,177,179,192,223,229,231,262,268,269,288,388,389,392,397,399,408,512,743,749,751];
    break;
    case   PROB840_MIRROR_JZIO:  /* LSIO */
    problemIds = [177,178,179,180,222,226,229,230,231,232,235,239];
    break;
    case   PROB840_MIRROR:  /* All Problems Mirror */
    problemIds = [1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,61,62,63,64,65,67,68,69,70,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,113,114,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,151,152,153,154,155,156,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,267,268,269,271,272,273,274,275,276,280,281,282,283,284,285,287,288,289,291,292,293,294,295,296,297,298,299,300,301,303,304,305,307,308,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,373,374,375,376,377,378,381,382,383,384,385,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,425,429,431,432,435,438,439,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,459,460,462,466,469,470,471,472,474,475,477,478,479,480,481,482,483,484,485,487,488,489,490,493,494,495,496,497,498,501,502,503,504,505,507,508,509,511,512,513,514,515,516,517,518,519,520,521,523,524,525,527,528,531,532,533,534,535,536,537,538,539,540,541,542,545,549,551,552,555,558,559,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,579,580,581,582,585,586,587,588,589,590,591,592,594,595,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,725,726,727,728,729,730,733,734,737,738,739,740,741,742,743,744,745,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,768,769,770,771,772,773,774,775,776,777,778,779,780,782,786,789,790,791,792,794,795,797,798,799,800,801,802,805,806,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840];
    break;
    default:
    problemIds = [];
    break;
  }

  for( var i = 0 ; i < problemIds.length; i++){
    problemIds[i] += startId;
  }

  return problemIds;
}

function shuffle(array) {
  var n = array.length, t, i;

  while (n) {
    i = Math.floor(Math.random() * n--);
    t = array[n];
    array[n] = array[i];
    array[i] = t;
  }

  return array;
}
